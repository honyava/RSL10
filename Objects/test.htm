<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Tue Sep 12 10:48:13 2023
<BR><P>
<H3>Maximum Stack Usage =        296 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[d]">ADC_BATMON_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC_BATMON_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_BATMON_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[47]">ASRC_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[48]">ASRC_IN_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[49]">ASRC_OUT_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4b]">AUDIOSINK_PERIOD_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4a]">AUDIOSINK_PHASE_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[50]">BLE_AUDIO0_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[51]">BLE_AUDIO1_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[52]">BLE_AUDIO2_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[40]">BLE_COEX_IN_PROCESS_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3f]">BLE_COEX_RX_TX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3a]">BLE_CRYPT_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[36]">BLE_CSCNT_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3b]">BLE_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[39]">BLE_EVENT_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3d]">BLE_FINETGTIM_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3c]">BLE_GROSSTGTIM_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[38]">BLE_RX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[37]">BLE_SLP_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3e]">BLE_SW_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4c]">CLKDET_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1a]">DIO0_IRQHandler</a> from .\objects\interrupt.o(.text.DIO0_IRQHandler) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1b]">DIO1_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1c]">DIO2_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1d]">DIO3_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[12]">DMA0_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[13]">DMA1_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[14]">DMA2_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[15]">DMA3_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[16]">DMA4_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[17]">DMA5_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[18]">DMA6_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[19]">DMA7_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2a]">DMIC_OD_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[29]">DMIC_OUT_OD_IN_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2e]">DSP0_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2f]">DSP1_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[30]">DSP2_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[31]">DSP3_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[32]">DSP4_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[33]">DSP5_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[34]">DSP6_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[35]">DSP7_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4d]">FLASH_COPY_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4e]">FLASH_ECC_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[25]">I2C_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[4f]">MEMORY_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2d]">PCM_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2b]">PCM_RX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[2c]">PCM_TX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from .\objects\port.o(.text.PendSV_Handler) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[43]">RF_IRQ_RECEIVED_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[46]">RF_RXFIFO_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[42]">RF_RXSTOP_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[44]">RF_SYNC_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[45]">RF_TXFIFO_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[41]">RF_TX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[b]">RTC_ALARM_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[c]">RTC_CLOCK_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[21]">SPI0_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1f]">SPI0_RX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[20]">SPI0_TX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[24]">SPI1_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[22]">SPI1_RX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[23]">SPI1_TX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from .\objects\port.o(.text.SVC_Handler) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from .\objects\port.o(.text.SysTick_Handler) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[53]">SystemInit</a> from .\objects\system_rsl10.o(.text.SystemInit) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[11]">TIMER3_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[28]">UART_ERROR_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[26]">UART_RX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[27]">UART_TX_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[a]">WAKEUP_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[1e]">WATCHDOG_IRQHandler</a> from .\objects\startup_rsl10.o(RESET) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[54]">__main</a> from C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry.o)(.ARM.Collect$$$$00000000) referenced from .\objects\startup_rsl10.o(RESET)
 <LI><a href="#[55]">main</a> from .\objects\main.o(.text.main) referenced from C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry9a.o)(.ARM.Collect$$$$0000000B)
 <LI><a href="#[59]">prvIdleTask</a> from .\objects\tasks.o(.text.prvIdleTask) referenced 2 times from .\objects\tasks.o(.text.vTaskStartScheduler)
 <LI><a href="#[58]">prvTaskExitError</a> from .\objects\port.o(.text.prvTaskExitError) referenced 2 times from .\objects\port.o(.text.pxPortInitialiseStack)
 <LI><a href="#[5a]">prvTimerTask</a> from .\objects\timers.o(.text.prvTimerTask) referenced 2 times from .\objects\timers.o(.text.xTimerCreateTimerTask)
 <LI><a href="#[56]">vTaskCode_ONE</a> from .\objects\main.o(.text.vTaskCode_ONE) referenced 2 times from .\objects\main.o(.text.main)
 <LI><a href="#[57]">vTaskCode_TWO</a> from .\objects\main.o(.text.vTaskCode_TWO) referenced 2 times from .\objects\main.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>ISR_Vector_Table_End</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_BATMON_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_BATMON_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_BATMON_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ASRC_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ASRC_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ASRC_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>AUDIOSINK_PERIOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>AUDIOSINK_PHASE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>BLE_AUDIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>BLE_AUDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>BLE_AUDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>BLE_COEX_IN_PROCESS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>BLE_COEX_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>BLE_CRYPT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>BLE_CSCNT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>BLE_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>BLE_EVENT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>BLE_FINETGTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>BLE_GROSSTGTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>BLE_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>BLE_SLP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>BLE_SW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CLKDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DIO3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMIC_OD_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMIC_OUT_OD_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DSP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DSP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DSP4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DSP5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DSP6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DSP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>FLASH_COPY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>FLASH_ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>MEMORY_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PCM_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PCM_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PCM_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>RF_IRQ_RECEIVED_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>RF_RXFIFO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RF_RXSTOP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>RF_SYNC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>RF_TXFIFO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>RF_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RTC_ALARM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI0_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI0_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI1_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>UART_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>UART_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>UART_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>WATCHDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\objects\startup_rsl10.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry.o)(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry4.o)(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[5d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry5.o)(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[62]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry5.o)(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ae]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry7b.o)(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[af]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry8b.o)(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b0]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry9a.o)(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b1]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry10a.o)(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b2]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(entry11a.o)(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[7b]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memcpya.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memcpya.o)(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memcpya.o)(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text), UNUSED)

<P><STRONG><a name="[61]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(memseta.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(init.o)(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(init.o)(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>DIO0_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, .\objects\interrupt.o(.text.DIO0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, .\objects\port.o(.text.PendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, .\objects\port.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, .\objects\port.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 840 bytes, Stack size 32 bytes, .\objects\system_rsl10.o(.text.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SystemCoreClockUpdate &rArr; System_GetTargetForTrim &rArr; Sys_ReadNVR4
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetTargetForTrim
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Clocks_SystemClkConfig
</UL>

<P><STRONG><a name="[53]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, .\objects\system_rsl10.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_rsl10.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>System_GetTargetForTrim</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, .\objects\system_rsl10.o(.text.System_GetTargetForTrim))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = System_GetTargetForTrim &rArr; Sys_ReadNVR4
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_ReadNVR4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[9f]"></a>eTaskConfirmSleepModeStatus</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, .\objects\tasks.o(.text.eTaskConfirmSleepModeStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = eTaskConfirmSleepModeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[55]"></a>main</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, .\objects\main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = main &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitXTAL
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPWM
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitButton
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_DIO_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[99]"></a>pvPortMalloc</STRONG> (Thumb, 530 bytes, Stack size 48 bytes, .\objects\heap_4.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[88]"></a>pxPortInitialiseStack</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, .\objects\port.o(.text.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[6f]"></a>uxListRemove</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, .\objects\list.o(.text.uxListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
</UL>

<P><STRONG><a name="[6b]"></a>vInitButton</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\objects\my_func.o(.text.vInitButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vInitButton &rArr; Sys_DIO_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_DIO_IntConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_DIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>vInitPWM</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, .\objects\my_func.o(.text.vInitPWM))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>vInitXTAL</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, .\objects\my_func.o(.text.vInitXTAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = vInitXTAL &rArr; Sys_Clocks_SystemClkConfig &rArr; SystemCoreClockUpdate &rArr; System_GetTargetForTrim &rArr; Sys_ReadNVR4
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Clocks_SystemClkConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>vListInitialise</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, .\objects\list.o(.text.vListInitialise))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[87]"></a>vListInitialiseItem</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, .\objects\list.o(.text.vListInitialiseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[70]"></a>vListInsert</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, .\objects\list.o(.text.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[72]"></a>vPortEnterCritical</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, .\objects\port.o(.text.vPortEnterCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[74]"></a>vPortExitCritical</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, .\objects\port.o(.text.vPortExitCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortExitCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[7e]"></a>vPortFree</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, .\objects\heap_4.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[a7]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, .\objects\port.o(.text.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[81]"></a>vPortSuppressTicksAndSleep</STRONG> (Thumb, 524 bytes, Stack size 32 bytes, .\objects\port.o(.text.vPortSuppressTicksAndSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vPortSuppressTicksAndSleep &rArr; vTaskStepTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStepTick
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskConfirmSleepModeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[93]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, .\objects\queue.o(.text.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; prvUnlockQueue &rArr; prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[56]"></a>vTaskCode_ONE</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\objects\main.o(.text.vTaskCode_ONE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = vTaskCode_ONE &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_GPIO_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[57]"></a>vTaskCode_TWO</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\objects\main.o(.text.vTaskCode_TWO))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = vTaskCode_TWO &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_GPIO_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[a3]"></a>vTaskDelay</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, .\objects\tasks.o(.text.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskCode_TWO
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskCode_ONE
</UL>

<P><STRONG><a name="[aa]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, .\objects\tasks.o(.text.vTaskInternalSetTimeOutState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vTaskInternalSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[98]"></a>vTaskMissedYield</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\objects\tasks.o(.text.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[a4]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, .\objects\tasks.o(.text.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[a1]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, .\objects\tasks.o(.text.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[6d]"></a>vTaskStartScheduler</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, .\objects\tasks.o(.text.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>vTaskStepTick</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, .\objects\tasks.o(.text.vTaskStepTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vTaskStepTick
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[80]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\objects\tasks.o(.text.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[5b]"></a>vTaskSwitchContext</STRONG> (Thumb, 190 bytes, Stack size 20 bytes, .\objects\tasks.o(.text.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[a6]"></a>xPortStartScheduler</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, .\objects\port.o(.text.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = xPortStartScheduler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvPortStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[77]"></a>xQueueGenericCreate</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, .\objects\queue.o(.text.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[84]"></a>xQueueGenericReset</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, .\objects\queue.o(.text.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[90]"></a>xQueueReceive</STRONG> (Thumb, 476 bytes, Stack size 64 bytes, .\objects\queue.o(.text.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = xQueueReceive &rArr; prvUnlockQueue &rArr; prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[ab]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, .\objects\tasks.o(.text.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xTaskCheckForTimeOut &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[6c]"></a>xTaskCreate</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, .\objects\tasks.o(.text.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, .\objects\tasks.o(.text.xTaskGetSchedulerState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[94]"></a>xTaskGetTickCount</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, .\objects\tasks.o(.text.xTaskGetTickCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[63]"></a>xTaskIncrementTick</STRONG> (Thumb, 608 bytes, Stack size 48 bytes, .\objects\tasks.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[7d]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, .\objects\tasks.o(.text.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[8c]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, .\objects\tasks.o(.text.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvNotifyQueueSetContainer
</UL>

<P><STRONG><a name="[82]"></a>xTaskResumeAll</STRONG> (Thumb, 546 bytes, Stack size 40 bytes, .\objects\tasks.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[a5]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, .\objects\timers.o(.text.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(handlers.o)(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ba]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(handlers.o)(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bb]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCLANG\Bin\..\lib\armlib\mc_w.l(handlers.o)(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[69]"></a>Sys_DIO_Config</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\objects\main.o(.text.Sys_DIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Sys_DIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>Sys_GPIO_Toggle</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, .\objects\main.o(.text.Sys_GPIO_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Sys_GPIO_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskCode_TWO
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskCode_ONE
</UL>

<P><STRONG><a name="[64]"></a>Sys_Clocks_SystemClkConfig</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\objects\my_func.o(.text.Sys_Clocks_SystemClkConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Sys_Clocks_SystemClkConfig &rArr; SystemCoreClockUpdate &rArr; System_GetTargetForTrim &rArr; Sys_ReadNVR4
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitXTAL
</UL>

<P><STRONG><a name="[9c]"></a>Sys_DIO_Config</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\objects\my_func.o(.text.Sys_DIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Sys_DIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitButton
</UL>

<P><STRONG><a name="[9d]"></a>Sys_DIO_IntConfig</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, .\objects\my_func.o(.text.Sys_DIO_IntConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Sys_DIO_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitButton
</UL>

<P><STRONG><a name="[9e]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, .\objects\my_func.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitButton
</UL>

<P><STRONG><a name="[67]"></a>Sys_ReadNVR4</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, .\objects\system_rsl10.o(.text.Sys_ReadNVR4))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Sys_ReadNVR4
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetTargetForTrim
</UL>

<P><STRONG><a name="[a8]"></a>prvPortStartFirstTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, .\objects\port.o(.text.prvPortStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[58]"></a>prvTaskExitError</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, .\objects\port.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[9a]"></a>prvHeapInit</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, .\objects\heap_4.o(.text.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[9b]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 198 bytes, Stack size 12 bytes, .\objects\heap_4.o(.text.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[7a]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, .\objects\queue.o(.text.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[7c]"></a>prvCopyDataToQueue</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, .\objects\queue.o(.text.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvNotifyQueueSetContainer
</UL>

<P><STRONG><a name="[83]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, .\objects\queue.o(.text.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[8a]"></a>prvIsQueueEmpty</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\objects\queue.o(.text.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueEmpty &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[8b]"></a>prvNotifyQueueSetContainer</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, .\objects\queue.o(.text.prvNotifyQueueSetContainer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[97]"></a>prvUnlockQueue</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, .\objects\queue.o(.text.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvUnlockQueue &rArr; prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvNotifyQueueSetContainer
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[6e]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, .\objects\tasks.o(.text.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[71]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, .\objects\tasks.o(.text.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[78]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, .\objects\tasks.o(.text.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[79]"></a>prvDeleteTCB</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\objects\tasks.o(.text.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[7f]"></a>prvGetExpectedIdleTime</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, .\objects\tasks.o(.text.prvGetExpectedIdleTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvGetExpectedIdleTime
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[59]"></a>prvIdleTask</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, .\objects\tasks.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetExpectedIdleTime
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[85]"></a>prvInitialiseNewTask</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, .\objects\tasks.o(.text.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[73]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, .\objects\tasks.o(.text.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[ac]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, .\objects\tasks.o(.text.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[75]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, .\objects\timers.o(.text.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[96]"></a>prvGetNextExpireTime</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, .\objects\timers.o(.text.prvGetNextExpireTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvGetNextExpireTime
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[89]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, .\objects\timers.o(.text.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[8d]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, .\objects\timers.o(.text.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[8f]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 384 bytes, Stack size 56 bytes, .\objects\timers.o(.text.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = prvProcessReceivedCommands &rArr; xQueueReceive &rArr; prvUnlockQueue &rArr; prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[92]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, .\objects\timers.o(.text.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; vQueueWaitForMessageRestricted &rArr; prvUnlockQueue &rArr; prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[8e]"></a>prvReloadTimer</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, .\objects\timers.o(.text.prvReloadTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[91]"></a>prvSampleTimeNow</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, .\objects\timers.o(.text.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[95]"></a>prvSwitchTimerLists</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, .\objects\timers.o(.text.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[5a]"></a>prvTimerTask</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, .\objects\timers.o(.text.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; xQueueReceive &rArr; prvUnlockQueue &rArr; prvNotifyQueueSetContainer &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text.xTimerCreateTimerTask)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
